// AUTO-GENERATED FILE. DO NOT EDIT.
// Generated by scripts/generate-data-manifest.mjs
// Maps (dataType, year) => static JSON import for bundlers.

export type DataType = 'new_moons' | 'solar_terms' | 'full_moons';

export async function loadData(dataType: DataType, year: number): Promise<any> {
  switch (dataType) {

    case 'new_moons':
      switch (year) {
        case 1900: return (await import('./precomputed/new_moons/1900.json')).default;
        case 1901: return (await import('./precomputed/new_moons/1901.json')).default;
        case 1902: return (await import('./precomputed/new_moons/1902.json')).default;
        case 1903: return (await import('./precomputed/new_moons/1903.json')).default;
        case 1904: return (await import('./precomputed/new_moons/1904.json')).default;
        case 1905: return (await import('./precomputed/new_moons/1905.json')).default;
        case 1906: return (await import('./precomputed/new_moons/1906.json')).default;
        case 1907: return (await import('./precomputed/new_moons/1907.json')).default;
        case 1908: return (await import('./precomputed/new_moons/1908.json')).default;
        case 1909: return (await import('./precomputed/new_moons/1909.json')).default;
        case 1910: return (await import('./precomputed/new_moons/1910.json')).default;
        case 1911: return (await import('./precomputed/new_moons/1911.json')).default;
        case 1912: return (await import('./precomputed/new_moons/1912.json')).default;
        case 1913: return (await import('./precomputed/new_moons/1913.json')).default;
        case 1914: return (await import('./precomputed/new_moons/1914.json')).default;
        case 1915: return (await import('./precomputed/new_moons/1915.json')).default;
        case 1916: return (await import('./precomputed/new_moons/1916.json')).default;
        case 1917: return (await import('./precomputed/new_moons/1917.json')).default;
        case 1918: return (await import('./precomputed/new_moons/1918.json')).default;
        case 1919: return (await import('./precomputed/new_moons/1919.json')).default;
        case 1920: return (await import('./precomputed/new_moons/1920.json')).default;
        case 1921: return (await import('./precomputed/new_moons/1921.json')).default;
        case 1922: return (await import('./precomputed/new_moons/1922.json')).default;
        case 1923: return (await import('./precomputed/new_moons/1923.json')).default;
        case 1924: return (await import('./precomputed/new_moons/1924.json')).default;
        case 1925: return (await import('./precomputed/new_moons/1925.json')).default;
        case 1926: return (await import('./precomputed/new_moons/1926.json')).default;
        case 1927: return (await import('./precomputed/new_moons/1927.json')).default;
        case 1928: return (await import('./precomputed/new_moons/1928.json')).default;
        case 1929: return (await import('./precomputed/new_moons/1929.json')).default;
        case 1930: return (await import('./precomputed/new_moons/1930.json')).default;
        case 1931: return (await import('./precomputed/new_moons/1931.json')).default;
        case 1932: return (await import('./precomputed/new_moons/1932.json')).default;
        case 1933: return (await import('./precomputed/new_moons/1933.json')).default;
        case 1934: return (await import('./precomputed/new_moons/1934.json')).default;
        case 1935: return (await import('./precomputed/new_moons/1935.json')).default;
        case 1936: return (await import('./precomputed/new_moons/1936.json')).default;
        case 1937: return (await import('./precomputed/new_moons/1937.json')).default;
        case 1938: return (await import('./precomputed/new_moons/1938.json')).default;
        case 1939: return (await import('./precomputed/new_moons/1939.json')).default;
        case 1940: return (await import('./precomputed/new_moons/1940.json')).default;
        case 1941: return (await import('./precomputed/new_moons/1941.json')).default;
        case 1942: return (await import('./precomputed/new_moons/1942.json')).default;
        case 1943: return (await import('./precomputed/new_moons/1943.json')).default;
        case 1944: return (await import('./precomputed/new_moons/1944.json')).default;
        case 1945: return (await import('./precomputed/new_moons/1945.json')).default;
        case 1946: return (await import('./precomputed/new_moons/1946.json')).default;
        case 1947: return (await import('./precomputed/new_moons/1947.json')).default;
        case 1948: return (await import('./precomputed/new_moons/1948.json')).default;
        case 1949: return (await import('./precomputed/new_moons/1949.json')).default;
        case 1950: return (await import('./precomputed/new_moons/1950.json')).default;
        case 1951: return (await import('./precomputed/new_moons/1951.json')).default;
        case 1952: return (await import('./precomputed/new_moons/1952.json')).default;
        case 1953: return (await import('./precomputed/new_moons/1953.json')).default;
        case 1954: return (await import('./precomputed/new_moons/1954.json')).default;
        case 1955: return (await import('./precomputed/new_moons/1955.json')).default;
        case 1956: return (await import('./precomputed/new_moons/1956.json')).default;
        case 1957: return (await import('./precomputed/new_moons/1957.json')).default;
        case 1958: return (await import('./precomputed/new_moons/1958.json')).default;
        case 1959: return (await import('./precomputed/new_moons/1959.json')).default;
        case 1960: return (await import('./precomputed/new_moons/1960.json')).default;
        case 1961: return (await import('./precomputed/new_moons/1961.json')).default;
        case 1962: return (await import('./precomputed/new_moons/1962.json')).default;
        case 1963: return (await import('./precomputed/new_moons/1963.json')).default;
        case 1964: return (await import('./precomputed/new_moons/1964.json')).default;
        case 1965: return (await import('./precomputed/new_moons/1965.json')).default;
        case 1966: return (await import('./precomputed/new_moons/1966.json')).default;
        case 1967: return (await import('./precomputed/new_moons/1967.json')).default;
        case 1968: return (await import('./precomputed/new_moons/1968.json')).default;
        case 1969: return (await import('./precomputed/new_moons/1969.json')).default;
        case 1970: return (await import('./precomputed/new_moons/1970.json')).default;
        case 1971: return (await import('./precomputed/new_moons/1971.json')).default;
        case 1972: return (await import('./precomputed/new_moons/1972.json')).default;
        case 1973: return (await import('./precomputed/new_moons/1973.json')).default;
        case 1974: return (await import('./precomputed/new_moons/1974.json')).default;
        case 1975: return (await import('./precomputed/new_moons/1975.json')).default;
        case 1976: return (await import('./precomputed/new_moons/1976.json')).default;
        case 1977: return (await import('./precomputed/new_moons/1977.json')).default;
        case 1978: return (await import('./precomputed/new_moons/1978.json')).default;
        case 1979: return (await import('./precomputed/new_moons/1979.json')).default;
        case 1980: return (await import('./precomputed/new_moons/1980.json')).default;
        case 1981: return (await import('./precomputed/new_moons/1981.json')).default;
        case 1982: return (await import('./precomputed/new_moons/1982.json')).default;
        case 1983: return (await import('./precomputed/new_moons/1983.json')).default;
        case 1984: return (await import('./precomputed/new_moons/1984.json')).default;
        case 1985: return (await import('./precomputed/new_moons/1985.json')).default;
        case 1986: return (await import('./precomputed/new_moons/1986.json')).default;
        case 1987: return (await import('./precomputed/new_moons/1987.json')).default;
        case 1988: return (await import('./precomputed/new_moons/1988.json')).default;
        case 1989: return (await import('./precomputed/new_moons/1989.json')).default;
        case 1990: return (await import('./precomputed/new_moons/1990.json')).default;
        case 1991: return (await import('./precomputed/new_moons/1991.json')).default;
        case 1992: return (await import('./precomputed/new_moons/1992.json')).default;
        case 1993: return (await import('./precomputed/new_moons/1993.json')).default;
        case 1994: return (await import('./precomputed/new_moons/1994.json')).default;
        case 1995: return (await import('./precomputed/new_moons/1995.json')).default;
        case 1996: return (await import('./precomputed/new_moons/1996.json')).default;
        case 1997: return (await import('./precomputed/new_moons/1997.json')).default;
        case 1998: return (await import('./precomputed/new_moons/1998.json')).default;
        case 1999: return (await import('./precomputed/new_moons/1999.json')).default;
        case 2000: return (await import('./precomputed/new_moons/2000.json')).default;
        case 2001: return (await import('./precomputed/new_moons/2001.json')).default;
        case 2002: return (await import('./precomputed/new_moons/2002.json')).default;
        case 2003: return (await import('./precomputed/new_moons/2003.json')).default;
        case 2004: return (await import('./precomputed/new_moons/2004.json')).default;
        case 2005: return (await import('./precomputed/new_moons/2005.json')).default;
        case 2006: return (await import('./precomputed/new_moons/2006.json')).default;
        case 2007: return (await import('./precomputed/new_moons/2007.json')).default;
        case 2008: return (await import('./precomputed/new_moons/2008.json')).default;
        case 2009: return (await import('./precomputed/new_moons/2009.json')).default;
        case 2010: return (await import('./precomputed/new_moons/2010.json')).default;
        case 2011: return (await import('./precomputed/new_moons/2011.json')).default;
        case 2012: return (await import('./precomputed/new_moons/2012.json')).default;
        case 2013: return (await import('./precomputed/new_moons/2013.json')).default;
        case 2014: return (await import('./precomputed/new_moons/2014.json')).default;
        case 2015: return (await import('./precomputed/new_moons/2015.json')).default;
        case 2016: return (await import('./precomputed/new_moons/2016.json')).default;
        case 2017: return (await import('./precomputed/new_moons/2017.json')).default;
        case 2018: return (await import('./precomputed/new_moons/2018.json')).default;
        case 2019: return (await import('./precomputed/new_moons/2019.json')).default;
        case 2020: return (await import('./precomputed/new_moons/2020.json')).default;
        case 2021: return (await import('./precomputed/new_moons/2021.json')).default;
        case 2022: return (await import('./precomputed/new_moons/2022.json')).default;
        case 2023: return (await import('./precomputed/new_moons/2023.json')).default;
        case 2024: return (await import('./precomputed/new_moons/2024.json')).default;
        case 2025: return (await import('./precomputed/new_moons/2025.json')).default;
        case 2026: return (await import('./precomputed/new_moons/2026.json')).default;
        case 2027: return (await import('./precomputed/new_moons/2027.json')).default;
        case 2028: return (await import('./precomputed/new_moons/2028.json')).default;
        case 2029: return (await import('./precomputed/new_moons/2029.json')).default;
        case 2030: return (await import('./precomputed/new_moons/2030.json')).default;
        case 2031: return (await import('./precomputed/new_moons/2031.json')).default;
        case 2032: return (await import('./precomputed/new_moons/2032.json')).default;
        case 2033: return (await import('./precomputed/new_moons/2033.json')).default;
        case 2034: return (await import('./precomputed/new_moons/2034.json')).default;
        case 2035: return (await import('./precomputed/new_moons/2035.json')).default;
        case 2036: return (await import('./precomputed/new_moons/2036.json')).default;
        case 2037: return (await import('./precomputed/new_moons/2037.json')).default;
        case 2038: return (await import('./precomputed/new_moons/2038.json')).default;
        case 2039: return (await import('./precomputed/new_moons/2039.json')).default;
        case 2040: return (await import('./precomputed/new_moons/2040.json')).default;
        case 2041: return (await import('./precomputed/new_moons/2041.json')).default;
        case 2042: return (await import('./precomputed/new_moons/2042.json')).default;
        case 2043: return (await import('./precomputed/new_moons/2043.json')).default;
        case 2044: return (await import('./precomputed/new_moons/2044.json')).default;
        case 2045: return (await import('./precomputed/new_moons/2045.json')).default;
        case 2046: return (await import('./precomputed/new_moons/2046.json')).default;
        case 2047: return (await import('./precomputed/new_moons/2047.json')).default;
        case 2048: return (await import('./precomputed/new_moons/2048.json')).default;
        case 2049: return (await import('./precomputed/new_moons/2049.json')).default;
        case 2050: return (await import('./precomputed/new_moons/2050.json')).default;
        case 2051: return (await import('./precomputed/new_moons/2051.json')).default;
        case 2052: return (await import('./precomputed/new_moons/2052.json')).default;
        case 2053: return (await import('./precomputed/new_moons/2053.json')).default;
        case 2054: return (await import('./precomputed/new_moons/2054.json')).default;
        case 2055: return (await import('./precomputed/new_moons/2055.json')).default;
        case 2056: return (await import('./precomputed/new_moons/2056.json')).default;
        case 2057: return (await import('./precomputed/new_moons/2057.json')).default;
        case 2058: return (await import('./precomputed/new_moons/2058.json')).default;
        case 2059: return (await import('./precomputed/new_moons/2059.json')).default;
        case 2060: return (await import('./precomputed/new_moons/2060.json')).default;
        case 2061: return (await import('./precomputed/new_moons/2061.json')).default;
        case 2062: return (await import('./precomputed/new_moons/2062.json')).default;
        case 2063: return (await import('./precomputed/new_moons/2063.json')).default;
        case 2064: return (await import('./precomputed/new_moons/2064.json')).default;
        case 2065: return (await import('./precomputed/new_moons/2065.json')).default;
        case 2066: return (await import('./precomputed/new_moons/2066.json')).default;
        case 2067: return (await import('./precomputed/new_moons/2067.json')).default;
        case 2068: return (await import('./precomputed/new_moons/2068.json')).default;
        case 2069: return (await import('./precomputed/new_moons/2069.json')).default;
        case 2070: return (await import('./precomputed/new_moons/2070.json')).default;
        case 2071: return (await import('./precomputed/new_moons/2071.json')).default;
        case 2072: return (await import('./precomputed/new_moons/2072.json')).default;
        case 2073: return (await import('./precomputed/new_moons/2073.json')).default;
        case 2074: return (await import('./precomputed/new_moons/2074.json')).default;
        case 2075: return (await import('./precomputed/new_moons/2075.json')).default;
        case 2076: return (await import('./precomputed/new_moons/2076.json')).default;
        case 2077: return (await import('./precomputed/new_moons/2077.json')).default;
        case 2078: return (await import('./precomputed/new_moons/2078.json')).default;
        case 2079: return (await import('./precomputed/new_moons/2079.json')).default;
        case 2080: return (await import('./precomputed/new_moons/2080.json')).default;
        case 2081: return (await import('./precomputed/new_moons/2081.json')).default;
        case 2082: return (await import('./precomputed/new_moons/2082.json')).default;
        case 2083: return (await import('./precomputed/new_moons/2083.json')).default;
        case 2084: return (await import('./precomputed/new_moons/2084.json')).default;
        case 2085: return (await import('./precomputed/new_moons/2085.json')).default;
        case 2086: return (await import('./precomputed/new_moons/2086.json')).default;
        case 2087: return (await import('./precomputed/new_moons/2087.json')).default;
        case 2088: return (await import('./precomputed/new_moons/2088.json')).default;
        case 2089: return (await import('./precomputed/new_moons/2089.json')).default;
        case 2090: return (await import('./precomputed/new_moons/2090.json')).default;
        case 2091: return (await import('./precomputed/new_moons/2091.json')).default;
        case 2092: return (await import('./precomputed/new_moons/2092.json')).default;
        case 2093: return (await import('./precomputed/new_moons/2093.json')).default;
        case 2094: return (await import('./precomputed/new_moons/2094.json')).default;
        case 2095: return (await import('./precomputed/new_moons/2095.json')).default;
        case 2096: return (await import('./precomputed/new_moons/2096.json')).default;
        case 2097: return (await import('./precomputed/new_moons/2097.json')).default;
        case 2098: return (await import('./precomputed/new_moons/2098.json')).default;
        case 2099: return (await import('./precomputed/new_moons/2099.json')).default;
        case 2100: return (await import('./precomputed/new_moons/2100.json')).default;
      }
      break;

    case 'solar_terms':
      switch (year) {
        case 1900: return (await import('./precomputed/solar_terms/1900.json')).default;
        case 1901: return (await import('./precomputed/solar_terms/1901.json')).default;
        case 1902: return (await import('./precomputed/solar_terms/1902.json')).default;
        case 1903: return (await import('./precomputed/solar_terms/1903.json')).default;
        case 1904: return (await import('./precomputed/solar_terms/1904.json')).default;
        case 1905: return (await import('./precomputed/solar_terms/1905.json')).default;
        case 1906: return (await import('./precomputed/solar_terms/1906.json')).default;
        case 1907: return (await import('./precomputed/solar_terms/1907.json')).default;
        case 1908: return (await import('./precomputed/solar_terms/1908.json')).default;
        case 1909: return (await import('./precomputed/solar_terms/1909.json')).default;
        case 1910: return (await import('./precomputed/solar_terms/1910.json')).default;
        case 1911: return (await import('./precomputed/solar_terms/1911.json')).default;
        case 1912: return (await import('./precomputed/solar_terms/1912.json')).default;
        case 1913: return (await import('./precomputed/solar_terms/1913.json')).default;
        case 1914: return (await import('./precomputed/solar_terms/1914.json')).default;
        case 1915: return (await import('./precomputed/solar_terms/1915.json')).default;
        case 1916: return (await import('./precomputed/solar_terms/1916.json')).default;
        case 1917: return (await import('./precomputed/solar_terms/1917.json')).default;
        case 1918: return (await import('./precomputed/solar_terms/1918.json')).default;
        case 1919: return (await import('./precomputed/solar_terms/1919.json')).default;
        case 1920: return (await import('./precomputed/solar_terms/1920.json')).default;
        case 1921: return (await import('./precomputed/solar_terms/1921.json')).default;
        case 1922: return (await import('./precomputed/solar_terms/1922.json')).default;
        case 1923: return (await import('./precomputed/solar_terms/1923.json')).default;
        case 1924: return (await import('./precomputed/solar_terms/1924.json')).default;
        case 1925: return (await import('./precomputed/solar_terms/1925.json')).default;
        case 1926: return (await import('./precomputed/solar_terms/1926.json')).default;
        case 1927: return (await import('./precomputed/solar_terms/1927.json')).default;
        case 1928: return (await import('./precomputed/solar_terms/1928.json')).default;
        case 1929: return (await import('./precomputed/solar_terms/1929.json')).default;
        case 1930: return (await import('./precomputed/solar_terms/1930.json')).default;
        case 1931: return (await import('./precomputed/solar_terms/1931.json')).default;
        case 1932: return (await import('./precomputed/solar_terms/1932.json')).default;
        case 1933: return (await import('./precomputed/solar_terms/1933.json')).default;
        case 1934: return (await import('./precomputed/solar_terms/1934.json')).default;
        case 1935: return (await import('./precomputed/solar_terms/1935.json')).default;
        case 1936: return (await import('./precomputed/solar_terms/1936.json')).default;
        case 1937: return (await import('./precomputed/solar_terms/1937.json')).default;
        case 1938: return (await import('./precomputed/solar_terms/1938.json')).default;
        case 1939: return (await import('./precomputed/solar_terms/1939.json')).default;
        case 1940: return (await import('./precomputed/solar_terms/1940.json')).default;
        case 1941: return (await import('./precomputed/solar_terms/1941.json')).default;
        case 1942: return (await import('./precomputed/solar_terms/1942.json')).default;
        case 1943: return (await import('./precomputed/solar_terms/1943.json')).default;
        case 1944: return (await import('./precomputed/solar_terms/1944.json')).default;
        case 1945: return (await import('./precomputed/solar_terms/1945.json')).default;
        case 1946: return (await import('./precomputed/solar_terms/1946.json')).default;
        case 1947: return (await import('./precomputed/solar_terms/1947.json')).default;
        case 1948: return (await import('./precomputed/solar_terms/1948.json')).default;
        case 1949: return (await import('./precomputed/solar_terms/1949.json')).default;
        case 1950: return (await import('./precomputed/solar_terms/1950.json')).default;
        case 1951: return (await import('./precomputed/solar_terms/1951.json')).default;
        case 1952: return (await import('./precomputed/solar_terms/1952.json')).default;
        case 1953: return (await import('./precomputed/solar_terms/1953.json')).default;
        case 1954: return (await import('./precomputed/solar_terms/1954.json')).default;
        case 1955: return (await import('./precomputed/solar_terms/1955.json')).default;
        case 1956: return (await import('./precomputed/solar_terms/1956.json')).default;
        case 1957: return (await import('./precomputed/solar_terms/1957.json')).default;
        case 1958: return (await import('./precomputed/solar_terms/1958.json')).default;
        case 1959: return (await import('./precomputed/solar_terms/1959.json')).default;
        case 1960: return (await import('./precomputed/solar_terms/1960.json')).default;
        case 1961: return (await import('./precomputed/solar_terms/1961.json')).default;
        case 1962: return (await import('./precomputed/solar_terms/1962.json')).default;
        case 1963: return (await import('./precomputed/solar_terms/1963.json')).default;
        case 1964: return (await import('./precomputed/solar_terms/1964.json')).default;
        case 1965: return (await import('./precomputed/solar_terms/1965.json')).default;
        case 1966: return (await import('./precomputed/solar_terms/1966.json')).default;
        case 1967: return (await import('./precomputed/solar_terms/1967.json')).default;
        case 1968: return (await import('./precomputed/solar_terms/1968.json')).default;
        case 1969: return (await import('./precomputed/solar_terms/1969.json')).default;
        case 1970: return (await import('./precomputed/solar_terms/1970.json')).default;
        case 1971: return (await import('./precomputed/solar_terms/1971.json')).default;
        case 1972: return (await import('./precomputed/solar_terms/1972.json')).default;
        case 1973: return (await import('./precomputed/solar_terms/1973.json')).default;
        case 1974: return (await import('./precomputed/solar_terms/1974.json')).default;
        case 1975: return (await import('./precomputed/solar_terms/1975.json')).default;
        case 1976: return (await import('./precomputed/solar_terms/1976.json')).default;
        case 1977: return (await import('./precomputed/solar_terms/1977.json')).default;
        case 1978: return (await import('./precomputed/solar_terms/1978.json')).default;
        case 1979: return (await import('./precomputed/solar_terms/1979.json')).default;
        case 1980: return (await import('./precomputed/solar_terms/1980.json')).default;
        case 1981: return (await import('./precomputed/solar_terms/1981.json')).default;
        case 1982: return (await import('./precomputed/solar_terms/1982.json')).default;
        case 1983: return (await import('./precomputed/solar_terms/1983.json')).default;
        case 1984: return (await import('./precomputed/solar_terms/1984.json')).default;
        case 1985: return (await import('./precomputed/solar_terms/1985.json')).default;
        case 1986: return (await import('./precomputed/solar_terms/1986.json')).default;
        case 1987: return (await import('./precomputed/solar_terms/1987.json')).default;
        case 1988: return (await import('./precomputed/solar_terms/1988.json')).default;
        case 1989: return (await import('./precomputed/solar_terms/1989.json')).default;
        case 1990: return (await import('./precomputed/solar_terms/1990.json')).default;
        case 1991: return (await import('./precomputed/solar_terms/1991.json')).default;
        case 1992: return (await import('./precomputed/solar_terms/1992.json')).default;
        case 1993: return (await import('./precomputed/solar_terms/1993.json')).default;
        case 1994: return (await import('./precomputed/solar_terms/1994.json')).default;
        case 1995: return (await import('./precomputed/solar_terms/1995.json')).default;
        case 1996: return (await import('./precomputed/solar_terms/1996.json')).default;
        case 1997: return (await import('./precomputed/solar_terms/1997.json')).default;
        case 1998: return (await import('./precomputed/solar_terms/1998.json')).default;
        case 1999: return (await import('./precomputed/solar_terms/1999.json')).default;
        case 2000: return (await import('./precomputed/solar_terms/2000.json')).default;
        case 2001: return (await import('./precomputed/solar_terms/2001.json')).default;
        case 2002: return (await import('./precomputed/solar_terms/2002.json')).default;
        case 2003: return (await import('./precomputed/solar_terms/2003.json')).default;
        case 2004: return (await import('./precomputed/solar_terms/2004.json')).default;
        case 2005: return (await import('./precomputed/solar_terms/2005.json')).default;
        case 2006: return (await import('./precomputed/solar_terms/2006.json')).default;
        case 2007: return (await import('./precomputed/solar_terms/2007.json')).default;
        case 2008: return (await import('./precomputed/solar_terms/2008.json')).default;
        case 2009: return (await import('./precomputed/solar_terms/2009.json')).default;
        case 2010: return (await import('./precomputed/solar_terms/2010.json')).default;
        case 2011: return (await import('./precomputed/solar_terms/2011.json')).default;
        case 2012: return (await import('./precomputed/solar_terms/2012.json')).default;
        case 2013: return (await import('./precomputed/solar_terms/2013.json')).default;
        case 2014: return (await import('./precomputed/solar_terms/2014.json')).default;
        case 2015: return (await import('./precomputed/solar_terms/2015.json')).default;
        case 2016: return (await import('./precomputed/solar_terms/2016.json')).default;
        case 2017: return (await import('./precomputed/solar_terms/2017.json')).default;
        case 2018: return (await import('./precomputed/solar_terms/2018.json')).default;
        case 2019: return (await import('./precomputed/solar_terms/2019.json')).default;
        case 2020: return (await import('./precomputed/solar_terms/2020.json')).default;
        case 2021: return (await import('./precomputed/solar_terms/2021.json')).default;
        case 2022: return (await import('./precomputed/solar_terms/2022.json')).default;
        case 2023: return (await import('./precomputed/solar_terms/2023.json')).default;
        case 2024: return (await import('./precomputed/solar_terms/2024.json')).default;
        case 2025: return (await import('./precomputed/solar_terms/2025.json')).default;
        case 2026: return (await import('./precomputed/solar_terms/2026.json')).default;
        case 2027: return (await import('./precomputed/solar_terms/2027.json')).default;
        case 2028: return (await import('./precomputed/solar_terms/2028.json')).default;
        case 2029: return (await import('./precomputed/solar_terms/2029.json')).default;
        case 2030: return (await import('./precomputed/solar_terms/2030.json')).default;
        case 2031: return (await import('./precomputed/solar_terms/2031.json')).default;
        case 2032: return (await import('./precomputed/solar_terms/2032.json')).default;
        case 2033: return (await import('./precomputed/solar_terms/2033.json')).default;
        case 2034: return (await import('./precomputed/solar_terms/2034.json')).default;
        case 2035: return (await import('./precomputed/solar_terms/2035.json')).default;
        case 2036: return (await import('./precomputed/solar_terms/2036.json')).default;
        case 2037: return (await import('./precomputed/solar_terms/2037.json')).default;
        case 2038: return (await import('./precomputed/solar_terms/2038.json')).default;
        case 2039: return (await import('./precomputed/solar_terms/2039.json')).default;
        case 2040: return (await import('./precomputed/solar_terms/2040.json')).default;
        case 2041: return (await import('./precomputed/solar_terms/2041.json')).default;
        case 2042: return (await import('./precomputed/solar_terms/2042.json')).default;
        case 2043: return (await import('./precomputed/solar_terms/2043.json')).default;
        case 2044: return (await import('./precomputed/solar_terms/2044.json')).default;
        case 2045: return (await import('./precomputed/solar_terms/2045.json')).default;
        case 2046: return (await import('./precomputed/solar_terms/2046.json')).default;
        case 2047: return (await import('./precomputed/solar_terms/2047.json')).default;
        case 2048: return (await import('./precomputed/solar_terms/2048.json')).default;
        case 2049: return (await import('./precomputed/solar_terms/2049.json')).default;
        case 2050: return (await import('./precomputed/solar_terms/2050.json')).default;
        case 2051: return (await import('./precomputed/solar_terms/2051.json')).default;
        case 2052: return (await import('./precomputed/solar_terms/2052.json')).default;
        case 2053: return (await import('./precomputed/solar_terms/2053.json')).default;
        case 2054: return (await import('./precomputed/solar_terms/2054.json')).default;
        case 2055: return (await import('./precomputed/solar_terms/2055.json')).default;
        case 2056: return (await import('./precomputed/solar_terms/2056.json')).default;
        case 2057: return (await import('./precomputed/solar_terms/2057.json')).default;
        case 2058: return (await import('./precomputed/solar_terms/2058.json')).default;
        case 2059: return (await import('./precomputed/solar_terms/2059.json')).default;
        case 2060: return (await import('./precomputed/solar_terms/2060.json')).default;
        case 2061: return (await import('./precomputed/solar_terms/2061.json')).default;
        case 2062: return (await import('./precomputed/solar_terms/2062.json')).default;
        case 2063: return (await import('./precomputed/solar_terms/2063.json')).default;
        case 2064: return (await import('./precomputed/solar_terms/2064.json')).default;
        case 2065: return (await import('./precomputed/solar_terms/2065.json')).default;
        case 2066: return (await import('./precomputed/solar_terms/2066.json')).default;
        case 2067: return (await import('./precomputed/solar_terms/2067.json')).default;
        case 2068: return (await import('./precomputed/solar_terms/2068.json')).default;
        case 2069: return (await import('./precomputed/solar_terms/2069.json')).default;
        case 2070: return (await import('./precomputed/solar_terms/2070.json')).default;
        case 2071: return (await import('./precomputed/solar_terms/2071.json')).default;
        case 2072: return (await import('./precomputed/solar_terms/2072.json')).default;
        case 2073: return (await import('./precomputed/solar_terms/2073.json')).default;
        case 2074: return (await import('./precomputed/solar_terms/2074.json')).default;
        case 2075: return (await import('./precomputed/solar_terms/2075.json')).default;
        case 2076: return (await import('./precomputed/solar_terms/2076.json')).default;
        case 2077: return (await import('./precomputed/solar_terms/2077.json')).default;
        case 2078: return (await import('./precomputed/solar_terms/2078.json')).default;
        case 2079: return (await import('./precomputed/solar_terms/2079.json')).default;
        case 2080: return (await import('./precomputed/solar_terms/2080.json')).default;
        case 2081: return (await import('./precomputed/solar_terms/2081.json')).default;
        case 2082: return (await import('./precomputed/solar_terms/2082.json')).default;
        case 2083: return (await import('./precomputed/solar_terms/2083.json')).default;
        case 2084: return (await import('./precomputed/solar_terms/2084.json')).default;
        case 2085: return (await import('./precomputed/solar_terms/2085.json')).default;
        case 2086: return (await import('./precomputed/solar_terms/2086.json')).default;
        case 2087: return (await import('./precomputed/solar_terms/2087.json')).default;
        case 2088: return (await import('./precomputed/solar_terms/2088.json')).default;
        case 2089: return (await import('./precomputed/solar_terms/2089.json')).default;
        case 2090: return (await import('./precomputed/solar_terms/2090.json')).default;
        case 2091: return (await import('./precomputed/solar_terms/2091.json')).default;
        case 2092: return (await import('./precomputed/solar_terms/2092.json')).default;
        case 2093: return (await import('./precomputed/solar_terms/2093.json')).default;
        case 2094: return (await import('./precomputed/solar_terms/2094.json')).default;
        case 2095: return (await import('./precomputed/solar_terms/2095.json')).default;
        case 2096: return (await import('./precomputed/solar_terms/2096.json')).default;
        case 2097: return (await import('./precomputed/solar_terms/2097.json')).default;
        case 2098: return (await import('./precomputed/solar_terms/2098.json')).default;
        case 2099: return (await import('./precomputed/solar_terms/2099.json')).default;
        case 2100: return (await import('./precomputed/solar_terms/2100.json')).default;
      }
      break;

    case 'full_moons':
      switch (year) {
        case 1900: return (await import('./precomputed/full_moons/1900.json')).default;
        case 1901: return (await import('./precomputed/full_moons/1901.json')).default;
        case 1902: return (await import('./precomputed/full_moons/1902.json')).default;
        case 1903: return (await import('./precomputed/full_moons/1903.json')).default;
        case 1904: return (await import('./precomputed/full_moons/1904.json')).default;
        case 1905: return (await import('./precomputed/full_moons/1905.json')).default;
        case 1906: return (await import('./precomputed/full_moons/1906.json')).default;
        case 1907: return (await import('./precomputed/full_moons/1907.json')).default;
        case 1908: return (await import('./precomputed/full_moons/1908.json')).default;
        case 1909: return (await import('./precomputed/full_moons/1909.json')).default;
        case 1910: return (await import('./precomputed/full_moons/1910.json')).default;
        case 1911: return (await import('./precomputed/full_moons/1911.json')).default;
        case 1912: return (await import('./precomputed/full_moons/1912.json')).default;
        case 1913: return (await import('./precomputed/full_moons/1913.json')).default;
        case 1914: return (await import('./precomputed/full_moons/1914.json')).default;
        case 1915: return (await import('./precomputed/full_moons/1915.json')).default;
        case 1916: return (await import('./precomputed/full_moons/1916.json')).default;
        case 1917: return (await import('./precomputed/full_moons/1917.json')).default;
        case 1918: return (await import('./precomputed/full_moons/1918.json')).default;
        case 1919: return (await import('./precomputed/full_moons/1919.json')).default;
        case 1920: return (await import('./precomputed/full_moons/1920.json')).default;
        case 1921: return (await import('./precomputed/full_moons/1921.json')).default;
        case 1922: return (await import('./precomputed/full_moons/1922.json')).default;
        case 1923: return (await import('./precomputed/full_moons/1923.json')).default;
        case 1924: return (await import('./precomputed/full_moons/1924.json')).default;
        case 1925: return (await import('./precomputed/full_moons/1925.json')).default;
        case 1926: return (await import('./precomputed/full_moons/1926.json')).default;
        case 1927: return (await import('./precomputed/full_moons/1927.json')).default;
        case 1928: return (await import('./precomputed/full_moons/1928.json')).default;
        case 1929: return (await import('./precomputed/full_moons/1929.json')).default;
        case 1930: return (await import('./precomputed/full_moons/1930.json')).default;
        case 1931: return (await import('./precomputed/full_moons/1931.json')).default;
        case 1932: return (await import('./precomputed/full_moons/1932.json')).default;
        case 1933: return (await import('./precomputed/full_moons/1933.json')).default;
        case 1934: return (await import('./precomputed/full_moons/1934.json')).default;
        case 1935: return (await import('./precomputed/full_moons/1935.json')).default;
        case 1936: return (await import('./precomputed/full_moons/1936.json')).default;
        case 1937: return (await import('./precomputed/full_moons/1937.json')).default;
        case 1938: return (await import('./precomputed/full_moons/1938.json')).default;
        case 1939: return (await import('./precomputed/full_moons/1939.json')).default;
        case 1940: return (await import('./precomputed/full_moons/1940.json')).default;
        case 1941: return (await import('./precomputed/full_moons/1941.json')).default;
        case 1942: return (await import('./precomputed/full_moons/1942.json')).default;
        case 1943: return (await import('./precomputed/full_moons/1943.json')).default;
        case 1944: return (await import('./precomputed/full_moons/1944.json')).default;
        case 1945: return (await import('./precomputed/full_moons/1945.json')).default;
        case 1946: return (await import('./precomputed/full_moons/1946.json')).default;
        case 1947: return (await import('./precomputed/full_moons/1947.json')).default;
        case 1948: return (await import('./precomputed/full_moons/1948.json')).default;
        case 1949: return (await import('./precomputed/full_moons/1949.json')).default;
        case 1950: return (await import('./precomputed/full_moons/1950.json')).default;
        case 1951: return (await import('./precomputed/full_moons/1951.json')).default;
        case 1952: return (await import('./precomputed/full_moons/1952.json')).default;
        case 1953: return (await import('./precomputed/full_moons/1953.json')).default;
        case 1954: return (await import('./precomputed/full_moons/1954.json')).default;
        case 1955: return (await import('./precomputed/full_moons/1955.json')).default;
        case 1956: return (await import('./precomputed/full_moons/1956.json')).default;
        case 1957: return (await import('./precomputed/full_moons/1957.json')).default;
        case 1958: return (await import('./precomputed/full_moons/1958.json')).default;
        case 1959: return (await import('./precomputed/full_moons/1959.json')).default;
        case 1960: return (await import('./precomputed/full_moons/1960.json')).default;
        case 1961: return (await import('./precomputed/full_moons/1961.json')).default;
        case 1962: return (await import('./precomputed/full_moons/1962.json')).default;
        case 1963: return (await import('./precomputed/full_moons/1963.json')).default;
        case 1964: return (await import('./precomputed/full_moons/1964.json')).default;
        case 1965: return (await import('./precomputed/full_moons/1965.json')).default;
        case 1966: return (await import('./precomputed/full_moons/1966.json')).default;
        case 1967: return (await import('./precomputed/full_moons/1967.json')).default;
        case 1968: return (await import('./precomputed/full_moons/1968.json')).default;
        case 1969: return (await import('./precomputed/full_moons/1969.json')).default;
        case 1970: return (await import('./precomputed/full_moons/1970.json')).default;
        case 1971: return (await import('./precomputed/full_moons/1971.json')).default;
        case 1972: return (await import('./precomputed/full_moons/1972.json')).default;
        case 1973: return (await import('./precomputed/full_moons/1973.json')).default;
        case 1974: return (await import('./precomputed/full_moons/1974.json')).default;
        case 1975: return (await import('./precomputed/full_moons/1975.json')).default;
        case 1976: return (await import('./precomputed/full_moons/1976.json')).default;
        case 1977: return (await import('./precomputed/full_moons/1977.json')).default;
        case 1978: return (await import('./precomputed/full_moons/1978.json')).default;
        case 1979: return (await import('./precomputed/full_moons/1979.json')).default;
        case 1980: return (await import('./precomputed/full_moons/1980.json')).default;
        case 1981: return (await import('./precomputed/full_moons/1981.json')).default;
        case 1982: return (await import('./precomputed/full_moons/1982.json')).default;
        case 1983: return (await import('./precomputed/full_moons/1983.json')).default;
        case 1984: return (await import('./precomputed/full_moons/1984.json')).default;
        case 1985: return (await import('./precomputed/full_moons/1985.json')).default;
        case 1986: return (await import('./precomputed/full_moons/1986.json')).default;
        case 1987: return (await import('./precomputed/full_moons/1987.json')).default;
        case 1988: return (await import('./precomputed/full_moons/1988.json')).default;
        case 1989: return (await import('./precomputed/full_moons/1989.json')).default;
        case 1990: return (await import('./precomputed/full_moons/1990.json')).default;
        case 1991: return (await import('./precomputed/full_moons/1991.json')).default;
        case 1992: return (await import('./precomputed/full_moons/1992.json')).default;
        case 1993: return (await import('./precomputed/full_moons/1993.json')).default;
        case 1994: return (await import('./precomputed/full_moons/1994.json')).default;
        case 1995: return (await import('./precomputed/full_moons/1995.json')).default;
        case 1996: return (await import('./precomputed/full_moons/1996.json')).default;
        case 1997: return (await import('./precomputed/full_moons/1997.json')).default;
        case 1998: return (await import('./precomputed/full_moons/1998.json')).default;
        case 1999: return (await import('./precomputed/full_moons/1999.json')).default;
        case 2000: return (await import('./precomputed/full_moons/2000.json')).default;
        case 2001: return (await import('./precomputed/full_moons/2001.json')).default;
        case 2002: return (await import('./precomputed/full_moons/2002.json')).default;
        case 2003: return (await import('./precomputed/full_moons/2003.json')).default;
        case 2004: return (await import('./precomputed/full_moons/2004.json')).default;
        case 2005: return (await import('./precomputed/full_moons/2005.json')).default;
        case 2006: return (await import('./precomputed/full_moons/2006.json')).default;
        case 2007: return (await import('./precomputed/full_moons/2007.json')).default;
        case 2008: return (await import('./precomputed/full_moons/2008.json')).default;
        case 2009: return (await import('./precomputed/full_moons/2009.json')).default;
        case 2010: return (await import('./precomputed/full_moons/2010.json')).default;
        case 2011: return (await import('./precomputed/full_moons/2011.json')).default;
        case 2012: return (await import('./precomputed/full_moons/2012.json')).default;
        case 2013: return (await import('./precomputed/full_moons/2013.json')).default;
        case 2014: return (await import('./precomputed/full_moons/2014.json')).default;
        case 2015: return (await import('./precomputed/full_moons/2015.json')).default;
        case 2016: return (await import('./precomputed/full_moons/2016.json')).default;
        case 2017: return (await import('./precomputed/full_moons/2017.json')).default;
        case 2018: return (await import('./precomputed/full_moons/2018.json')).default;
        case 2019: return (await import('./precomputed/full_moons/2019.json')).default;
        case 2020: return (await import('./precomputed/full_moons/2020.json')).default;
        case 2021: return (await import('./precomputed/full_moons/2021.json')).default;
        case 2022: return (await import('./precomputed/full_moons/2022.json')).default;
        case 2023: return (await import('./precomputed/full_moons/2023.json')).default;
        case 2024: return (await import('./precomputed/full_moons/2024.json')).default;
        case 2025: return (await import('./precomputed/full_moons/2025.json')).default;
        case 2026: return (await import('./precomputed/full_moons/2026.json')).default;
        case 2027: return (await import('./precomputed/full_moons/2027.json')).default;
        case 2028: return (await import('./precomputed/full_moons/2028.json')).default;
        case 2029: return (await import('./precomputed/full_moons/2029.json')).default;
        case 2030: return (await import('./precomputed/full_moons/2030.json')).default;
        case 2031: return (await import('./precomputed/full_moons/2031.json')).default;
        case 2032: return (await import('./precomputed/full_moons/2032.json')).default;
        case 2033: return (await import('./precomputed/full_moons/2033.json')).default;
        case 2034: return (await import('./precomputed/full_moons/2034.json')).default;
        case 2035: return (await import('./precomputed/full_moons/2035.json')).default;
        case 2036: return (await import('./precomputed/full_moons/2036.json')).default;
        case 2037: return (await import('./precomputed/full_moons/2037.json')).default;
        case 2038: return (await import('./precomputed/full_moons/2038.json')).default;
        case 2039: return (await import('./precomputed/full_moons/2039.json')).default;
        case 2040: return (await import('./precomputed/full_moons/2040.json')).default;
        case 2041: return (await import('./precomputed/full_moons/2041.json')).default;
        case 2042: return (await import('./precomputed/full_moons/2042.json')).default;
        case 2043: return (await import('./precomputed/full_moons/2043.json')).default;
        case 2044: return (await import('./precomputed/full_moons/2044.json')).default;
        case 2045: return (await import('./precomputed/full_moons/2045.json')).default;
        case 2046: return (await import('./precomputed/full_moons/2046.json')).default;
        case 2047: return (await import('./precomputed/full_moons/2047.json')).default;
        case 2048: return (await import('./precomputed/full_moons/2048.json')).default;
        case 2049: return (await import('./precomputed/full_moons/2049.json')).default;
        case 2050: return (await import('./precomputed/full_moons/2050.json')).default;
        case 2051: return (await import('./precomputed/full_moons/2051.json')).default;
        case 2052: return (await import('./precomputed/full_moons/2052.json')).default;
        case 2053: return (await import('./precomputed/full_moons/2053.json')).default;
        case 2054: return (await import('./precomputed/full_moons/2054.json')).default;
        case 2055: return (await import('./precomputed/full_moons/2055.json')).default;
        case 2056: return (await import('./precomputed/full_moons/2056.json')).default;
        case 2057: return (await import('./precomputed/full_moons/2057.json')).default;
        case 2058: return (await import('./precomputed/full_moons/2058.json')).default;
        case 2059: return (await import('./precomputed/full_moons/2059.json')).default;
        case 2060: return (await import('./precomputed/full_moons/2060.json')).default;
        case 2061: return (await import('./precomputed/full_moons/2061.json')).default;
        case 2062: return (await import('./precomputed/full_moons/2062.json')).default;
        case 2063: return (await import('./precomputed/full_moons/2063.json')).default;
        case 2064: return (await import('./precomputed/full_moons/2064.json')).default;
        case 2065: return (await import('./precomputed/full_moons/2065.json')).default;
        case 2066: return (await import('./precomputed/full_moons/2066.json')).default;
        case 2067: return (await import('./precomputed/full_moons/2067.json')).default;
        case 2068: return (await import('./precomputed/full_moons/2068.json')).default;
        case 2069: return (await import('./precomputed/full_moons/2069.json')).default;
        case 2070: return (await import('./precomputed/full_moons/2070.json')).default;
        case 2071: return (await import('./precomputed/full_moons/2071.json')).default;
        case 2072: return (await import('./precomputed/full_moons/2072.json')).default;
        case 2073: return (await import('./precomputed/full_moons/2073.json')).default;
        case 2074: return (await import('./precomputed/full_moons/2074.json')).default;
        case 2075: return (await import('./precomputed/full_moons/2075.json')).default;
        case 2076: return (await import('./precomputed/full_moons/2076.json')).default;
        case 2077: return (await import('./precomputed/full_moons/2077.json')).default;
        case 2078: return (await import('./precomputed/full_moons/2078.json')).default;
        case 2079: return (await import('./precomputed/full_moons/2079.json')).default;
        case 2080: return (await import('./precomputed/full_moons/2080.json')).default;
        case 2081: return (await import('./precomputed/full_moons/2081.json')).default;
        case 2082: return (await import('./precomputed/full_moons/2082.json')).default;
        case 2083: return (await import('./precomputed/full_moons/2083.json')).default;
        case 2084: return (await import('./precomputed/full_moons/2084.json')).default;
        case 2085: return (await import('./precomputed/full_moons/2085.json')).default;
        case 2086: return (await import('./precomputed/full_moons/2086.json')).default;
        case 2087: return (await import('./precomputed/full_moons/2087.json')).default;
        case 2088: return (await import('./precomputed/full_moons/2088.json')).default;
        case 2089: return (await import('./precomputed/full_moons/2089.json')).default;
        case 2090: return (await import('./precomputed/full_moons/2090.json')).default;
        case 2091: return (await import('./precomputed/full_moons/2091.json')).default;
        case 2092: return (await import('./precomputed/full_moons/2092.json')).default;
        case 2093: return (await import('./precomputed/full_moons/2093.json')).default;
        case 2094: return (await import('./precomputed/full_moons/2094.json')).default;
        case 2095: return (await import('./precomputed/full_moons/2095.json')).default;
        case 2096: return (await import('./precomputed/full_moons/2096.json')).default;
        case 2097: return (await import('./precomputed/full_moons/2097.json')).default;
        case 2098: return (await import('./precomputed/full_moons/2098.json')).default;
        case 2099: return (await import('./precomputed/full_moons/2099.json')).default;
        case 2100: return (await import('./precomputed/full_moons/2100.json')).default;
      }
      break;
  }
  throw new Error(`No static data for ${dataType}/${year}`);
}
